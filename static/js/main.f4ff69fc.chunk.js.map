{"version":3,"sources":["global/context/providers/MovieProvider.js","global/context/index.js","pages/Home/components/Progress/Progress.js","pages/Home/components/Cart/Cart.js","utils/movieQueries.js","pages/Home/components/Search/Search.js","pages/Home/containers/Home.js","index.js"],"names":["MovieContext","createContext","initialState","nominees","localState","JSON","parse","localStorage","getItem","reducer","state","action","type","payload","MovieContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","GlobalContextProvider","Progress","valueDisplay","Box","position","display","CircularProgress","style","width","height","color","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","Cart","globalContext","movie","useContext","console","log","className","length","map","Paper","getMovieSearch","searchId","a","requestOptions","headers","Accept","method","redirect","url","URL","process","search","URLSearchParams","apikey","s","toString","fetch","then","response","json","result","catch","error","Search","useState","query","setQuery","queryResults","setQueryResults","timeOutId","setTimeout","results","clearTimeout","InputBase","fullWidth","placeholder","inputProps","onChange","event","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4ff69fc.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieContext = createContext();\n\nconst initialState = {\n  nominees: ['test'],\n};\n\nconst localState = JSON.parse(localStorage.getItem('nominees'));\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_NOMINEES':\n      return { ...state, nominees: action.payload.nominees };\n    default:\n      return null;\n  }\n};\n\nexport const MovieContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, localState || initialState);\n\n  useEffect(() => {\n    localStorage.setItem('cart-items', JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <MovieContext.Provider value={[state, dispatch]}>\n      {children}\n    </MovieContext.Provider>\n  );\n};\n\nMovieContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const useMovieContext = () => useContext(MovieContext);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  MovieContextProvider,\n  useMovieContext,\n} from './providers/MovieProvider';\n\nexport const GlobalContextProvider = ({ children }) => (\n  <MovieContextProvider>{children}</MovieContextProvider>\n);\n\nGlobalContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const useGlobalContext = () => ({\n  movie: useMovieContext(),\n});\n\nexport const useGlobalDispatch = () => ({});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst Progress = ({ value }) => {\n  const valueDisplay = (value / 5) * 100;\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        style={{ width: 100, height: 100, color: '#88CADC' }}\n        variant=\"determinate\"\n        value={valueDisplay}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          color=\"textSecondary\"\n        >{`${value} / 5`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nProgress.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default Progress;\n","import React from 'react';\nimport { useGlobalContext } from 'global/context';\nimport Paper from '@material-ui/core/Paper';\nimport Progress from '../Progress/Progress';\nimport './Cart.scss';\n\nconst Cart = () => {\n  const globalContext = useGlobalContext();\n  const [movieState] = globalContext.movie;\n  const { nominees } = movieState;\n\n  const indexes = [0, 1, 2, 3, 4];\n\n  console.log('gucci');\n  return (\n    <div className=\"cart-wrapper\">\n      <div className=\"progress-wrapper\">\n        <Progress value={nominees.length} />\n      </div>\n      <div className=\"containers-wrapper\">\n        {indexes.map(() => (\n          <Paper className=\"cart-empty-container\" />\n          // <div  />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","const getMovieSearch = async (searchId) => {\n  const requestOptions = {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n    // mode: 'no-cors',\n    redirect: 'follow',\n  };\n  const url = new URL(process.env.REACT_APP_API_URL);\n  url.search = new URLSearchParams({\n    apikey: process.env.REACT_APP_API_KEY,\n    s: `*${searchId}*`,\n  });\n  console.log(url.toString());\n\n  if (searchId) {\n    return fetch(url.toString(), requestOptions)\n      .then((response) => response.json())\n      .then((result) => result)\n      .catch((error) => console.log('error', error));\n  }\n\n  return null;\n};\n\nexport default getMovieSearch;\n","import React, { useEffect, useState } from 'react';\n// import { useGlobalContext } from 'global/context';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport getMovieSearch from 'utils/movieQueries';\nimport './Search.scss';\n\nconst Search = () => {\n  // const globalContext = useGlobalContext();\n  // const [movieState] = globalContext.movie;\n  // const { nominees } = movieState;\n  const [query, setQuery] = useState();\n  const [queryResults, setQueryResults] = useState();\n\n  useEffect(() => {\n    const timeOutId = setTimeout(async () => {\n      const results = await getMovieSearch(query);\n      setQueryResults(results);\n    }, 500);\n    return () => clearTimeout(timeOutId);\n  }, [query]);\n\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <div className=\"search-wrapper\">\n      <Paper className=\"search-paper\">\n        <InputBase\n          fullWidth\n          className=\"search-input\"\n          placeholder=\"Search for movies...\"\n          inputProps={{ 'aria-label': 'search for movies' }}\n          onChange={handleChange}\n        />\n        <SearchIcon className=\"search-icon\" />\n      </Paper>\n      <div className=\"search-results-wrapper\">{queryResults}</div>\n    </div>\n  );\n};\n\nexport default Search;\n","import '../styles/Home.scss';\nimport Cart from '../components/Cart/Cart';\nimport Search from '../components/Search/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cart />\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalContextProvider } from './global/context';\nimport './styles/index.css';\nimport Home from './pages/Home';\n\nReactDOM.render(\n  <GlobalContextProvider>\n    <Home />\n  </GlobalContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}